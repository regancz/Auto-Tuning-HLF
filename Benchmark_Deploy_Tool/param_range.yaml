Parameters:
  Orderer:
    General_Authentication_TimeWindow:
      lower: 60s
      upper: 300s
      step: 30
    General_Cluster_SendBufferSize:
      lower: 5m
      upper: 30m
      step: 5
    General_Keepalive_ServerInterval:
      lower: 60s
      upper: 300s
      step: 60
    General_Keepalive_ServerMinInterval:
      lower: 7200s
      upper: 14400s
      step: 3600
    General_Keepalive_ServerTimeout:
      lower: 20s
      upper: 60s
      step: 10
    Metrics_Statsd_WriteInterval:
      lower: 10s
      upper: 60s
      step: 10
  Configtx:
#    Orderer_BatchTimeout:
#      lower: 1s
#      upper: 5s
#      step: 1
    Orderer_BatchSize_MaxMessageCount:
      lower: 10
      upper: 1000
      step: 10
#    Orderer_BatchSize_AbsoluteMaxBytes:
#      lower: 50MB
#      upper: 100MB
#      step: 10
    Orderer_BatchSize_PreferredMaxBytes:
      lower: 1MB
      upper: 100MB
      step: 1
  BftConfigtx:
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_RequestBatchMaxCount:
      lower: 50
      upper: 200
      step: 10
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_RequestBatchMaxInterval:
      lower: 10ms
      upper: 100ms
      step: 10
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_RequestForwardTimeout:
      lower: 1s
      upper: 5s
      step: 1
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_RequestComplainTimeout:
      lower: 10s
      upper: 60s
      step: 10
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_RequestAutoRemoveTimeout:
      lower: 1m0s
      upper: 5m0s
      step: 1
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_ViewChangeResendInterval:
      lower: 1s
      upper: 10s
      step: 1
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_ViewChangeTimeout:
      lower: 10s
      upper: 60s
      step: 10
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_LeaderHeartbeatTimeout:
      lower: 30s
      upper: 120s
      step: 30
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_CollectTimeout:
      lower: 500ms
      upper: 3000ms
      step: 500
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_IncomingMessageBufferSize:
      lower: 5242880
      upper: 15728640
      step: 5242880
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_RequestPoolSize:
      lower: 100
      upper: 300
      step: 50
    Profiles_ChannelUsingBFT_Orderer_SmartBFT_LeaderHeartbeatCount:
      lower: 50000
      upper: 150000
      step: 50000
  Peer:
    peer_keepalive_minInterval:
      lower: 3600s   # 假设下限为 1 小时 (3600 秒)
      upper: 14400s  # 假设上限为 4 小时 (14400 秒)
      step: 3600    # 假设每次变化步长为 1 小时 (3600 秒)
    peer_keepalive_client_interval:
      lower: 10s     # 假设下限为 10 秒
      upper: 30s     # 假设上限为 30 秒
      step: 5       # 假设每次变化步长为 5 秒
    peer_keepalive_client_timeout:
      lower: 30s     # 假设下限为 30 秒
      upper: 120s    # 假设上限为 2 分钟 (120 秒)
      step: 10      # 假设每次变化步长为 10 秒
    peer_keepalive_deliveryClient_interval:
      lower: 30s     # 假设下限为 30 秒
      upper: 90s     # 假设上限为 90 秒
      step: 10      # 假设每次变化步长为 10 秒
    peer_keepalive_deliveryClient_timeout:
      lower: 10s     # 假设下限为 10 秒
      upper: 30s     # 假设上限为 30 秒
      step: 5       # 假设每次变化步长为 5 秒
    peer_gossip_membershipTrackerInterval:
      lower: 1s      # 假设下限为 1 秒
      upper: 10s     # 假设上限为 10 秒
      step: 1       # 假设每次变化步长为 1 秒
    peer_gossip_maxBlockCountToStore:
      lower: 5   # 假设下限为 5
      upper: 20  # 假设上限为 20
      step: 5    # 假设每次变化步长为 5
    peer_gossip_maxPropagationBurstLatency:
      lower: 1ms   # 假设下限为 1ms
      upper: 50ms  # 假设上限为 50ms
      step: 10    # 假设每次变化步长为 5ms
    peer_gossip_maxPropagationBurstSize:
      lower: 5   # 假设下限为 5
      upper: 20  # 假设上限为 20
      step: 5    # 假设每次变化步长为 5
    peer_gossip_propagateIterations:
      lower: 1   # 假设下限为 1
      upper: 5   # 假设上限为 5
      step: 1    # 假设每次变化步长为 1
    peer_gossip_propagatePeerNum:
      lower: 1   # 假设下限为 1
      upper: 5   # 假设上限为 5
      step: 1    # 假设每次变化步长为 1
    peer_gossip_pullInterval:
      lower: 1s    # 假设下限为 1 秒
      upper: 10s   # 假设上限为 10 秒
      step: 2     # 假设每次变化步长为 1 秒
    peer_gossip_pullPeerNum:
      lower: 1     # 假设下限为 1
      upper: 5     # 假设上限为 5
      step: 1      # 假设每次变化步长为 1
    peer_gossip_requestStateInfoInterval:
      lower: 1s    # 假设下限为 1 秒
      upper: 10s   # 假设上限为 10 秒
      step: 2     # 假设每次变化步长为 1 秒
    peer_gossip_publishStateInfoInterval:
      lower: 1s    # 假设下限为 1 秒
      upper: 10s   # 假设上限为 10 秒
      step: 2     # 假设每次变化步长为 1 秒
    peer_gossip_publishCertPeriod:
      lower: 5s    # 假设下限为 5 秒
      upper: 30s   # 假设上限为 30 秒
      step: 10     # 假设每次变化步长为 5 秒
    peer_gossip_dialTimeout:
      lower: 1s    # 假设下限为 1 秒
      upper: 10s   # 假设上限为 10 秒
      step: 2     # 假设每次变化步长为 1 秒
    peer_gossip_connTimeout:
      lower: 1s    # 假设下限为 1 秒
      upper: 10s   # 假设上限为 10 秒
      step: 2     # 假设每次变化步长为 1 秒
    peer_gossip_recvBuffSize:
      lower: 10    # 假设下限为 10
      upper: 100   # 假设上限为 100
      step: 20     # 假设每次变化步长为 10
    peer_gossip_sendBuffSize:
      lower: 100   # 假设下限为 100
      upper: 500   # 假设上限为 500
      step: 100     # 假设每次变化步长为 50
    peer_gossip_digestWaitTime:
      lower: 500ms   # 假设下限为 500 毫秒
      upper: 2000ms      # 假设上限为 2 秒
      step: 500    # 假设每次变化步长为 100 毫秒
    peer_gossip_requestWaitTime:
      lower: 1000ms  # 假设下限为 1000 毫秒
      upper: 3000ms      # 假设上限为 3 秒
      step: 1000    # 假设每次变化步长为 200 毫秒
    peer_gossip_responseWaitTime:
      lower: 1s    # 假设下限为 1 秒
      upper: 5s    # 假设上限为 5 秒
      step: 1     # 假设每次变化步长为 1 秒
    peer_gossip_aliveTimeInterval:
      lower: 1s    # 假设下限为 1 秒
      upper: 10s   # 假设上限为 10 秒
      step: 2     # 假设每次变化步长为 1 秒
    peer_gossip_aliveExpirationTimeout:
      lower: 10s   # 假设下限为 10 秒
      upper: 30s   # 假设上限为 30 秒
      step: 10     # 假设每次变化步长为 5 秒
    peer_gossip_reconnectInterval:
      lower: 10s   # 假设下限为 10 秒
      upper: 60s   # 假设上限为 60 秒
      step: 10    # 假设每次变化步长为 10 秒
    peer_gossip_election_startupGracePeriod:
      lower: 10s   # 假设下限为 10 秒
      upper: 30s   # 假设上限为 30 秒
      step: 10     # 假设每次变化步长为 5 秒
    peer_gossip_election_membershipSampleInterval:
      lower: 500ms  # 假设下限为 500 毫秒
      upper: 2000ms     # 假设上限为 2 秒
      step: 500   # 假设每次变化步长为 100 毫秒
    peer_gossip_election_leaderAliveThreshold:
      lower: 5s    # 假设下限为 5 秒
      upper: 15s   # 假设上限为 15 秒
      step: 5     # 假设每次变化步长为 5 秒
    peer_gossip_election_leaderElectionDuration:
      lower: 2s    # 假设下限为 2 秒
      upper: 8s    # 假设上限为 8 秒
      step: 2     # 假设每次变化步长为 2 秒
    peer_gossip_pvtData_pullRetryThreshold:
      lower: 30s   # 假设下限为 30 秒
      upper: 120s  # 假设上限为 2 分钟
      step: 10    # 假设每次变化步长为 10 秒
    peer_gossip_pvtData_transientstoreMaxBlockRetention:
      lower: 500   # 假设下限为 500
      upper: 2000  # 假设上限为 2000
      step: 100    # 假设每次变化步长为 100
    peer_gossip_pvtData_pushAckTimeout:
      lower: 1s    # 假设下限为 1 秒
      upper: 5s    # 假设上限为 5 秒
      step: 1     # 假设每次变化步长为 1 秒
    peer_gossip_pvtData_btlPullMargin:
      lower: 5     # 假设下限为 5
      upper: 15    # 假设上限为 15
      step: 1      # 假设每次变化步长为 1
    peer_gossip_pvtData_reconcileBatchSize:
      lower: 5     # 假设下限为 5
      upper: 15    # 假设上限为 15
      step: 1      # 假设每次变化步长为 1
    peer_gossip_pvtData_reconcileSleepInterval:
      lower: 30s   # 假设下限为 30 秒
      upper: 120s  # 假设上限为 2 分钟
      step: 10    # 假设每次变化步长为 10 秒
    peer_gossip_state_checkInterval:
      lower: 5s      # 假设下限为 5 秒
      upper: 30s     # 假设上限为 30 秒
      step: 5       # 假设每次变化步长为 5 秒
    peer_gossip_state_responseTimeout:
      lower: 1s      # 假设下限为 1 秒
      upper: 5s      # 假设上限为 5 秒
      step: 1       # 假设每次变化步长为 1 秒
    peer_gossip_state_batchSize:
      lower: 5       # 假设下限为 5
      upper: 20      # 假设上限为 20
      step: 5        # 假设每次变化步长为 5
    peer_gossip_state_blockBufferSize:
      lower: 10      # 假设下限为 10
      upper: 30      # 假设上限为 30
      step: 5        # 假设每次变化步长为 5
    peer_gossip_state_maxRetries:
      lower: 1       # 假设下限为 1
      upper: 5       # 假设上限为 5
      step: 1        # 假设每次变化步长为 1
    peer_authentication_timewindow:
      lower: 5m     # 假设下限为 5 分钟
      upper: 30m    # 假设上限为 30 分钟
      step: 5      # 假设每次变化步长为 5 分钟
    peer_client_connTimeout:
      lower: 1s    # 假设下限为 1 秒
      upper: 5s    # 假设上限为 5 秒
      step: 1     # 假设每次变化步长为 1 秒
    peer_deliveryclient_reconnectTotalTimeThreshold:
      lower: 1800s   # 假设下限为 1800 秒
      upper: 7200s   # 假设上限为 7200 秒
      step: 300     # 假设每次变化步长为 300 秒
    peer_deliveryclient_connTimeout:
      lower: 1s      # 假设下限为 1 秒
      upper: 5s      # 假设上限为 5 秒
      step: 1       # 假设每次变化步长为 1 秒
    peer_deliveryclient_reConnectBackoffThreshold:
      lower: 1800s   # 假设下限为 1800 秒
      upper: 7200s   # 假设上限为 7200 秒
      step: 300     # 假设每次变化步长为 300 秒
    peer_discovery_authCacheMaxSize:
      lower: 500    # 假设下限为 500
      upper: 2000   # 假设上限为 2000
      step: 100     # 假设每次变化步长为 100
    peer_discovery_authCachePurgeRetentionRatio:
      lower: 0.5    # 假设下限为 0.5
      upper: 0.9    # 假设上限为 0.9
      step: 0.1    # 假设每次变化步长为 0.05
